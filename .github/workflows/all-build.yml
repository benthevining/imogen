name: Imogen all build

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#

jobs:


  plugin-main-build:

    name: plugin - ${{ matrix.artifact }} build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
        - os: windows-latest
          artifact: Windows
        - os: ubuntu-latest
          artifact: Linux
        - os: macos-latest
          artifact: MacOS

    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        path: imogen
        
    - name: Install JUCE's Linux dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: sudo apt install libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev
    
    - name: Run main build
      shell: bash
      run: cd $GITHUB_WORKSPACE/imogen && cmake -B Builds && cmake --build $GITHUB_WORKSPACE/imogen/Builds --config Release


  plugin-ios-build:
 
     name: plugin - iOS build
     runs-on: macos-latest
     timeout-minutes: 30

     steps:

     - name: Checkout code
       uses: actions/checkout@v2
       with:
        submodules: recursive
        path: imogen

     - name: Run iOS build script
       shell: bash
       run: cd $GITHUB_WORKSPACE/imogen && cmake -B Builds && cmake --build $GITHUB_WORKSPACE/imogen/Builds --config Release


  plugin-LV2-build:
  
      name: plugin - LV2 build
      runs-on: ubuntu-latest
      timeout-minutes: 30

      steps:

      - name: Install LV2 development headers
        shell: bash
        run: sudo apt-get install lv2-dev

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: imogen
        
      - name: Install JUCE's Linux dependencies
        if: runner.os == 'Linux'
        shell: bash
        run: sudo apt install libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev
    
      - name: Run main build
        shell: bash
        run: cd $GITHUB_WORKSPACE/imogen && cmake -B Builds && cmake --build $GITHUB_WORKSPACE/imogen/Builds --config Release
